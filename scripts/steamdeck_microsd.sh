#!/bin/bash

# Steam Deck MicroSD Management Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è MicroSD –∫–∞—Ä—Ç–∞–º–∏ –≤ Steam Deck
# –ê–≤—Ç–æ—Ä: @ncux11
# –í–µ—Ä—Å–∏—è: 0.1 (–û–∫—Ç—è–±—Ä—å 2025)

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${CYAN}=== $1 ===${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ MicroSD –∫–∞—Ä—Ç
check_microsd() {
    print_header "–ü–†–û–í–ï–†–ö–ê MICROSD –ö–ê–†–¢"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    echo "üîç –ü–æ–∏—Å–∫ MicroSD –∫–∞—Ä—Ç..."
    
    # –ò—â–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ mmcblk
    local devices=$(ls /dev/mmcblk* 2>/dev/null | grep -E 'mmcblk[0-9]+$' || true)
    
    if [[ -z "$devices" ]]; then
        print_warning "MicroSD –∫–∞—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
    
    echo "üì± –ù–∞–π–¥–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
    for device in $devices; do
        local size=$(lsblk -d -n -o SIZE "$device" 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        local model=$(lsblk -d -n -o MODEL "$device" 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        echo "  $device - $size - $model"
    done
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
get_mount_info() {
    print_header "–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–û–ù–¢–ò–†–û–í–ê–ù–ò–ò"
    
    echo "üìä –¢–µ–∫—É—â–∏–µ —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    mount | grep -E '(mmcblk|sd[a-z])' || echo "  –ù–µ—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤"
    
    echo
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /run/media:"
    if [[ -d "/run/media" ]]; then
        ls -la /run/media/ 2>/dev/null || echo "  –ü—É—Å—Ç–æ"
    else
        echo "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    echo
    echo "üîó –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏:"
    ls -la /run/media/mmcblk* 2>/dev/null || echo "  –ù–µ—Ç —Å—Å—ã–ª–æ–∫"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å UI
diagnose_ui_issue() {
    print_header "–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê UI –ü–†–û–ë–õ–ï–ú"
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Steam:"
    ps aux | grep -i steam | grep -v grep || echo "  Steam –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    
    echo
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Dolphin:"
    ps aux | grep -i dolphin | grep -v grep || echo "  Dolphin –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    
    echo
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ udev –ø—Ä–∞–≤–∏–ª:"
    if [[ -f "/etc/udev/rules.d/99-steamdeck.rules" ]]; then
        echo "  Steam Deck udev –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞–π–¥–µ–Ω—ã"
        cat /etc/udev/rules.d/99-steamdeck.rules
    else
        echo "  Steam Deck udev –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    echo
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–æ–≤:"
    systemctl status udisks2 2>/dev/null || echo "  udisks2 –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
refresh_ui() {
    print_header "–û–ë–ù–û–í–õ–ï–ù–ò–ï UI"
    
    echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI Steam Deck..."
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ udisks2
    print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ udisks2..."
    sudo systemctl restart udisks2 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å udisks2"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ udev –ø—Ä–∞–≤–∏–ª
    print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ udev –ø—Ä–∞–≤–∏–ª..."
    sudo udevadm control --reload-rules 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å udev –ø—Ä–∞–≤–∏–ª–∞"
    
    # –¢—Ä–∏–≥–≥–µ—Ä udev —Å–æ–±—ã—Ç–∏–π
    print_info "–¢—Ä–∏–≥–≥–µ—Ä udev —Å–æ–±—ã—Ç–∏–π..."
    sudo udevadm trigger 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å udev trigger"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ desktop —Ñ–∞–π–ª–æ–≤
    print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ desktop —Ñ–∞–π–ª–æ–≤..."
    update-desktop-database ~/.local/share/applications 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å desktop –±–∞–∑—É"
    
    print_success "UI –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
safely_remove() {
    print_header "–ë–ï–ó–û–ü–ê–°–ù–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï MICROSD"
    
    # –ù–∞—Ö–æ–¥–∏–º —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ MicroSD –∫–∞—Ä—Ç—ã
    local mounted=$(mount | grep -E 'mmcblk[0-9]+p[0-9]+' | awk '{print $1}' | sort -u)
    
    if [[ -z "$mounted" ]]; then
        print_warning "–ù–µ—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö MicroSD –∫–∞—Ä—Ç"
        return 1
    fi
    
    echo "üì± –°–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã:"
    for device in $mounted; do
        local mount_point=$(mount | grep "$device" | awk '{print $3}')
        echo "  $device -> $mount_point"
    done
    
    echo
    read -p "–ò–∑–≤–ª–µ—á—å –≤—Å–µ MicroSD –∫–∞—Ä—Ç—ã? (y/N): " confirm
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        for device in $mounted; do
            print_info "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ $device..."
            sudo umount "$device" 2>/dev/null || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å $device"
        done
        print_success "MicroSD –∫–∞—Ä—Ç—ã –∏–∑–≤–ª–µ—á–µ–Ω—ã"
    else
        print_info "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
fix_microsd_issues() {
    print_header "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú MICROSD"
    
    echo "üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    sudo mkdir -p /run/media/mmcblk0p1 2>/dev/null || true
    sudo chown deck:deck /run/media/mmcblk0p1 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    sudo chmod 755 /run/media/mmcblk0p1 2>/dev/null || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ udev –ø—Ä–∞–≤–∏–ª –¥–ª—è Steam Deck
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ udev –ø—Ä–∞–≤–∏–ª..."
    sudo tee /etc/udev/rules.d/99-steamdeck-microsd.rules > /dev/null << 'EOF'
# Steam Deck MicroSD rules
SUBSYSTEM=="block", KERNEL=="mmcblk*", ATTR{removable}=="1", GROUP="deck", MODE="0664"
SUBSYSTEM=="block", KERNEL=="mmcblk*", ATTR{removable}=="1", RUN+="/bin/mkdir -p /run/media/%k"
EOF
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ udev –ø—Ä–∞–≤–∏–ª
    print_info "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ udev –ø—Ä–∞–≤–∏–ª..."
    sudo udevadm control --reload-rules
    sudo udevadm trigger
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ udisks2
    print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ udisks2..."
    sudo systemctl restart udisks2
    
    print_success "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MicroSD
test_microsd() {
    print_header "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï MICROSD"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if ! check_microsd; then
        print_error "MicroSD –∫–∞—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    local devices=$(ls /dev/mmcblk* 2>/dev/null | grep -E 'mmcblk[0-9]+$')
    for device in $devices; do
        echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ $device..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
        local fstype=$(lsblk -d -n -o FSTYPE "$device" 2>/dev/null || echo "unknown")
        echo "  –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: $fstype"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
        local size=$(lsblk -d -n -o SIZE "$device" 2>/dev/null || echo "unknown")
        echo "  –†–∞–∑–º–µ—Ä: $size"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        local state=$(cat "/sys/block/$(basename $device)/removable" 2>/dev/null || echo "unknown")
        echo "  –°–æ—Å—Ç–æ—è–Ω–∏–µ: $state"
    done
    
    print_success "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "Steam Deck MicroSD Management Script v0.1"
    echo
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–Ø]"
    echo
    echo "–û–ü–¶–ò–ò:"
    echo "  check                     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å MicroSD –∫–∞—Ä—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  mount-info                - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"
    echo "  diagnose                  - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ UI –ø—Ä–æ–±–ª–µ–º"
    echo "  refresh                   - –û–±–Ω–æ–≤–∏—Ç—å UI"
    echo "  safely-remove             - –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ—á—å –∫–∞—Ä—Ç—ã"
    echo "  fix                       - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
    echo "  test                      - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MicroSD"
    echo "  help                      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo
    echo "–ü–†–ò–ú–ï–†–´:"
    echo "  $0 check                  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—Ä—Ç—ã"
    echo "  $0 diagnose               # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º"
    echo "  $0 fix                    # –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
    echo "  $0 safely-remove          # –ò–∑–≤–ª–µ—á—å –∫–∞—Ä—Ç—ã"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-check}" in
        "check")
            check_microsd
            ;;
        "mount-info")
            get_mount_info
            ;;
        "diagnose")
            diagnose_ui_issue
            ;;
        "refresh")
            refresh_ui
            ;;
        "safely-remove")
            safely_remove
            ;;
        "fix")
            fix_microsd_issues
            ;;
        "test")
            test_microsd
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
